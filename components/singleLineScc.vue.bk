
  <template>
  <div class="col-xs-12 main">
    sdfsdf
     <div class="divBtn">
      <button>모든노드</button>
      <button>분산전원</button>
      <button>#1M.Tr</button>
      <button>#2M.Tr</button>
      <button>#3M.Tr</button>
      <button>#4M.Tr</button>      
    </div>
    <div id="sccDiagram" style="width:100%; height:340px; background-color: #DAE4E4;"></div>
    <!-- <div id="sccDiagramMsg" style="width:100%; height:100%;"></div> -->
  </div> 
</template>
<script> 

  export default {
    layout: "sccDlg",
    components: {      
    },
    head: {
      link: [{ 
        }
      ],
      script: [
         {src : 'https://cdnjs.cloudflare.com/ajax/libs/gojs/1.8.25/go.js'},
         {src : '/scripts/sccLine.js'}
      ]
    },
    data() {
      return {  
        sccData : {"sccGroup":[{"id":"11212","cbList":[{"cbID":"a1","isOpen":false,"poleList":[{"poleID":"a1-1","dr":"DG,ESS"},{"poleID":"a1-2","dr":""},{"poleID":"a1-3","dr":""},{"poleID":"a1-4","dr":""},{"poleID":"a1-5","dr":"DG,ESS"}]},{"cbID":"a2","isOpen":false,"poleList":[{"poleID":"a2-1","dr":""},{"poleID":"a2-2","dr":""},{"poleID":"a2-3","dr":"DG,ESS"},{"poleID":"a2-4","dr":"DG,ESS"},{"poleID":"a2-5","dr":"DG,ESS"}]},{"cbID":"a3","isOpen":false,"poleList":[{"poleID":"a3-1","dr":""},{"poleID":"a3-2","dr":""},{"poleID":"a3-3","dr":"DG,ESS"},{"poleID":"a3-4","dr":"DG,ESS"},{"poleID":"a3-5","dr":"DG,ESS"}]},{"cbID":"a4","isOpne":false,"poleList":[{"poleID":"a4-1","dr":""},{"poleID":"a4-2","dr":""},{"poleID":"a4-3","dr":"DG,ESS"}]}]}]}
        ,$ : ''
      }
    },
    methods :{
      drawing : function(){
         
      } 
    },
    mounted() 
    {
      init_sccDlg(this.sccData);
    }
  }

 let diagram;
 function init_sccDlg(sccDatas){
   // alert(this.rccTopCnt +', '+ this.rccTopNames + ', '+       this.rccBottomCnt + ', '+ this.rccBottomNames)
        try {
          var $ = go.GraphObject.make;
          diagram = $(go.Diagram, "sccDiagram",{
          }); 
          var dWidth = document.getElementById('sccDiagram').clientWidth; // the width of diagram
          var dHeight = document.getElementById('sccDiagram').clientHeight; // the height of diagram
          var barWidth = dWidth * .99; 
         

          //  diagram.layout = $(go.ForceDirectedLayout);
          diagram.initialContentAlignment = go.Spot.Center;
      
        initSccDigram(sccDatas, $, diagram, dWidth, dHeight); 
           

          //  transformer = {category : "circleTemplate", key : "cb1-1", w : 10, 
          //   loc : new go.Point(80, 0), color : "black"};
          // barJson.push(transformer);
          // transformer = {category : "circleTemplate", key : "cb1-2", w : 10, 
          //   loc : new go.Point(80+60, 0), color : "black"};
          // barJson.push(transformer);
          // transformer = {category : "circleTemplate", key : "cb1-3", w : 10, 
          //   loc : new go.Point(80+60+60, 0), color : "black"};
          // barJson.push(transformer);

          // transformer = {category : "circleTemplate", key : "cb2-1", w : 10, 
          //   loc : new go.Point(80, 45), color : "black"};
          // barJson.push(transformer);
          // transformer = {category : "circleTemplate", key : "cb2-2", w : 10, 
          //   loc : new go.Point(80+60, 45), color : "black"};
          // barJson.push(transformer);
          // transformer = {category : "circleTemplate", key : "cb2-3", w : 10, 
          //   loc : new go.Point(80+60+60, 45), color : "black"};
          // barJson.push(transformer);

          // transformer = {category : "circleTemplate", key : "cb3-1", w : 10, 
          //   loc : new go.Point(80, 90), color : "black"};
          // barJson.push(transformer);
          // transformer = {category : "circleTemplate", key : "cb3-2", w : 10, 
          //   loc : new go.Point(80+60, 90), color : "black"};
          // barJson.push(transformer);
          // transformer = {category : "circleTemplate", key : "cb3-3", w : 10, 
          //   loc : new go.Point(80+60+60, 90), color : "black"};
          // barJson.push(transformer);

          // var linkedJson = [
          //   {from : "tr1", to : "cb1-1"},{from : "tr1", to : "cb2-1"},{from : "tr1", to : "cb3-1"},
          //   {from : "cb1-1", to:"cb1-2"}, {from : "cb1-2", to : "cb1-3"},
          //    {from : "cb2-1", to:"cb2-2"}, {from : "cb2-2", to : "cb2-3"},
          //     {from : "cb3-1", to:"cb3-2"}, {from : "cb3-2", to : "cb3-3"},
          
          // ]

 
        } catch (error) {
          alert(error);
        }
 }

</script>

<style>

  .col-xs-12,
  .main {
    margin: 0px;
    padding: 0px;
  }

</style>
